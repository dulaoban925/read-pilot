# ReadPilot - Project-wide Environment Configuration
# This file contains environment variables for the entire project
# Copy this to .env and fill in your actual values
#
# For detailed backend configuration, see backend/.env.example

# ===== Project Settings =====
PROJECT_NAME=ReadPilot
ENVIRONMENT=development

# ===== Service Ports =====
BACKEND_PORT=8000
FRONTEND_PORT=3000
POSTGRES_PORT=5432
REDIS_PORT=6379

# ===== URLs =====
BACKEND_URL=http://localhost:8000
FRONTEND_URL=http://localhost:3000

# ===== Database =====
POSTGRES_HOST=localhost
POSTGRES_DB=readpilot
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Full database URL (used by backend)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# ===== Redis (optional, for caching) =====
REDIS_HOST=localhost
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}

# ===== API Keys =====
# Add your actual API keys here (DO NOT commit to version control!)

# LLM Provider (choose one)
OPENAI_API_KEY=your-openai-api-key-here
# ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Vector Database (choose one)
PINECONE_API_KEY=your-pinecone-api-key-here
PINECONE_ENVIRONMENT=us-east-1
# Or use Qdrant (no API key needed for local)

# ===== Security =====
SECRET_KEY=your-secret-key-change-in-production-must-be-very-long-and-random

# ===== Docker Compose Override =====
# When using Docker Compose, these URLs will be different:
# DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
# REDIS_URL=redis://redis:6379
